# https://docs.travis-ci.com/user/languages/julia/

language: julia

julia:
  - 1 # latest 1.x.y
  # - nightly

os:
  - linux

jobs:
  allow_failures:
    - julia: nightly
  include:
    - if: type = push AND branch = master
      julia: 1
      os: osx
    # - stage: "Documentation"
    #   julia: 1
    #   os: linux
    #   script:
    #     - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
    #                                            Pkg.build("Trixi");
    #                                            Pkg.instantiate()'
    #     - julia --project=docs/ docs/make.jl
    #   after_success: skip

# coveralls with merging of multiple builds, cf. https://docs.coveralls.io/parallel-build-webhook
coveralls: true
env:
  global:
    - COVERALLS_PARALLEL=true
  jobs:
    - TRIXI_TEST=2D
    - TRIXI_TEST=2D_OLD
    - TRIXI_TEST=3D
    - TRIXI_TEST=paper-self-gravitating-gas-dynamics
    - TRIXI_TEST=1D
    - TRIXI_TEST=misc
notifications:
  webhooks: https://coveralls.io/webhook
  email: false

# codecov merges multiple reports automatically, cf. https://docs.codecov.io/docs/merging-reports
codecov: true

# avoid duplicate tests in PRs
branches:
  only:
    - master
    - dev

# we could use groups to trigger multiple builds in parallel to speed-up running expensive tests
# env:
#   - GROUP=SomeGroupName

# we could install binary dependencies if necessary
# addons:
#   apt:
#     packages:
#       - gfortran

# script:
# default build script along the lines of
#   using Pkg
#   Pkg.build() # Pkg.build(; verbose = true) for Julia 1.1 and up
#   Pkg.test(coverage=true)

# submit coverage reports (enabled already above) and/or deploy docs
# after_success:
