name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'AUTHORS.md'
      - 'CITATION.bib'
      - 'CONTRIBUTING.md'
      - 'LICENSE.md'
      - 'NEWS.md'
      - 'README.md'
      - '.zenodo.json'
      - '.github/workflows/benchmark.yml'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
      - 'benchmark/**'
      - 'docs/**'
      - 'utils/**'
  pull_request:
    paths-ignore:
      - 'AUTHORS.md'
      - 'CITATION.bib'
      - 'CONTRIBUTING.md'
      - 'LICENSE.md'
      - 'NEWS.md'
      - 'README.md'
      - '.zenodo.json'
      - '.github/workflows/benchmark.yml'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
      - 'benchmark/**'
      - 'docs/**'
      - 'utils/**'
  workflow_dispatch:

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    # We could also include the Julia version as in
    # name: ${{ matrix.trixi_test }} - ${{ matrix.os }} - Julia ${{ matrix.version }} - ${{ matrix.arch }} - ${{ github.event_name }}
    # to be more specific. However, that requires us updating the required CI tests whenever we update Julia.
    name: ${{ matrix.trixi_test }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          # - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
        trixi_test:
          - 1d
          - 2d_part1
          - 2d_part2
          - 2d_part3
          - 2d_mpi
          - 2d_threaded
          - 3d_part1
          - 3d_part2
          - paper-self-gravitating-gas-dynamics
          - misc
        include:
          - version: '1.6'
            os: macOS-latest
            arch: x64
            trixi_test: 2d_part1
          - version: '1.6'
            os: macOS-latest
            arch: x64
            trixi_test: 2d_part2
          - version: '1.6'
            os: macOS-latest
            arch: x64
            trixi_test: 2d_part3
          - version: '1.6'
            os: macOS-latest
            arch: x64
            trixi_test: 2d_mpi
          - version: '1.6'
            os: macOS-latest
            arch: x64
            trixi_test: 2d_threaded
          - version: '1.6'
            os: windows-latest
            arch: x64
            trixi_test: 2d_part1
          - version: '1.6'
            os: windows-latest
            arch: x64
            trixi_test: 2d_part2
          - version: '1.6'
            os: windows-latest
            arch: x64
            trixi_test: 2d_part3
          - version: '1.6'
            os: windows-latest
            arch: x64
            trixi_test: 2d_mpi
          - version: '1.6'
            os: windows-latest
            arch: x64
            trixi_test: 2d_threaded
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          show-versioninfo: true
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON: ""
      - uses: julia-actions/julia-runtest@v1
        env:
          PYTHON: ""
          TRIXI_TEST: ${{ matrix.trixi_test }}
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,examples
        # Codecov is disabled since it does not produce accurate measurements for parallel jobs
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.trixi_test }}-${{ matrix.os }}-${{ matrix.version }}-${{ matrix.arch }}-${{ github.run_id }}
          parallel: true
          path-to-lcov: ./lcov.info

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
